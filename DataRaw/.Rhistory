Nile
mean(Nile)
x<-Nile
c(1:10,by .2)
c(1:10,by(.2)
c(1:10,by(.2))
y<-c(1:10)
y
x+y
?repeat
?repeat()
x/y
x%%y
r(1:10)
c(1:10)
?by
list(1:10 by(.2))
list(1:10, by(.2))
c(1:10, by(.2))
x<-matrix(3,2)
x
?matrix
is.matrix(x)
x
x<-Nile
x
is.matrix(x)
x<-c(1,2,3)
x
z<-c(1,2,3)
z
x<-c(1:5)
x
x+1
x+1-1
(x+1)-1
x+2
x
x
print(x)
x+2
x+1-1
plot(Nile)
hist(Nile)
stdev(Nile)
dev(Nile)
stdev(Nile)
dev(Nile)
x<-matrix(ncol=3, nrow=5)
x
z<-matrix(data=c(1:3,),nrow=5,ncol=3,byrow=TRUE)
z<-matrix(data=c(1:3,),nrow=5,ncol=3)
z<-matrix(data=c(1:3),nrow=5,ncol=3)
z
z2<-matrix(data=c(1:3),nrow=5,ncol=3,byrow=TRUE)
z2
a<-matrix(dim(5,3))
a
View(z)
View(z)
View(z)
View(x)
view(y)
seq(z)
attr(x)
attr(x)
attr(x,y)
dim(z)
clear data
z<-NULL
for(i in 1:10) if (i%%2==0)z<-c(z,1)
z
for(i in 1:10) if (i%%2==0)z<-c(z,i)
z<-NULL
for(i in 1:10) if(1%%2==0)z<-c(z,i)
z
for(i in 1:10) if(i%%2==0)z<-c(z,i)
z
seq(2,10,2)
2*1:5
z-NA
z<-NA
for(i in 1:10)if(i%%2=0)z<-c(z,i)
for(i in 1:10)if(i%%2==0)z<-c(z,i)
z
u<-NULL
length(u)
v<-NA
length(v)
z<-NULL
for(i in 1:10^1000)if(i%%2==0)z<-c(z,i)
for(i in 1:10^100)if(i%%2==0)z<-c(z,i)
for(i in 1:10^10)if(i%%2==0)z<-c(z,i)
z
for(i in 1:(10^10)if(i%%2==0)z<-c(z,i)
z
z<-NULL
for(i in 1:1000) if(i%%2==0)z<-c(z,i)
z<-NULL
for(i in 1:10^1000)if(i%%2==0)z<-c(z,i)
for(i in 1:10^1000)if(i%%2==0)z<-c(z,i)
z
print(z)
z<-NULL
for(i in 1:(10^10)) if(i%%2==0)z<-c(z,i)
length(z)
mean(z)
z
a<-1009
b<-203
a
b
a+b
A<-9990
#this is a nice script
a<-1009
b<-203
a
b
a+b
A<-9990
install.packages("wmwpow")
library(wmwpow)
detach("package:wmwpow", unload = TRUE)
library(wmwpow)
shiehpow(n = 10, m = 10, p = 0.80, alpha = 0.05, dist = "exp", sides = "two.sided")
a
ns<-seq(100,100000, by=100)
length(ns)
ns
library(plotrix)
setwd("C:/Users/ncgro/Desktop/BIOS 6621/Projects/Grove_Project_01/DataRaw")
head(read.csv("lead-iq-01.csv"))
lead<-read.csv("lead-iq-01.csv")
# Create submatrix according to "Near" or "Far"
Near_list<-lead[which(lead$Smelter=="Near"),]
Far_list<-lead[which(lead$Smelter=="Far"),]
# Means of Near_list and Far_list IQ, rounded to
#   2 decimal places
Mean_Near_IQ<-round((mean(Near_list$IQ)),
digits=2)
Mean_Far_IQ<-round((mean(Far_list$IQ)),
digits=2)
gap.boxplot(lead$Near_list, lead$Far_list)
?gap.boxplot
# Boxplot of IQ values for Near and Far
boxplot(lead$Near_list, lead$Far_list)
# Boxplot of IQ values for Near and Far
boxplot(lead$Near_list, lead$Far_list)
# Boxplot of IQ values for Near and Far
boxplot(lead$Near_list, lead$Far_list, xlim=c(0,10),
ylim=c(0,1000))
detach("package:plotrix", unload = TRUE)
# Boxplot of IQ values for Near and Far
boxplot(lead$Near_list, lead$Far_list)
